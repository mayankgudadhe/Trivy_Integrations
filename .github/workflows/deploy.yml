name: Build, Scan, and Push Docker Image

on:
  workflow_dispatch:

jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Trivy DB for faster scans
      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db

      # Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_$(uname -m | sed 's/x86_64/64bit/')_deb.tar.gz -O trivy.tar.gz
          tar zxvf trivy.tar.gz trivy
          sudo mv trivy /usr/local/bin/
          trivy --version

      # Log in to Docker Hub
      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Build Docker image
      - name: Build Docker image
        run: docker build -t my-app:latest .

      # Scan with Trivy and generate report
      - name: Scan image for vulnerabilities
        run: |
          mkdir -p trivy-report
          trivy image \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --format table \
            -o trivy-report/report.txt \
            my-app:latest || echo "Vulnerabilities found. Check report."

      # Upload Trivy report even if vulnerabilities exist
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-vulnerability-report
          path: trivy-report/report.txt

      # Push Docker image only if scan passed
      - name: Push image to Docker Hub
        if: success() # only runs if scan didn't fail
        run: |
          docker tag my-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
